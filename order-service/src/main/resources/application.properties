# Application
spring.application.name=order-service
server.port=8080

# Jackson
spring.jackson.deserialization.fail-on-unknown-properties=true

# Kafka Producer
spring.kafka.bootstrap-servers=localhost:9091,localhost:9092,localhost:9093
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.properties.delivery.timeout.ms=120000
spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.request.timeout.ms=30000
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.consumer.group-id=orders-ms
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.properties.spring.json.trusted.packages=byramazanov.core*

orders.events.topic.name=orders-events

spring.kafka.producer.retries=5
spring.kafka.producer.properties.compression.type=snappy
spring.kafka.producer.properties.max.request.size=10485760
spring.kafka.producer.properties.buffer.memory=67108864
spring.kafka.producer.properties.retry.backoff.ms=1000

# H2 DB
spring.datasource.username=test
spring.datasource.password=test
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=update

# Postgres DB
#spring.datasource.username=postgres
#spring.datasource.password={secret_password}
#spring.datasource.url=jdbc:postgresql://localhost:5432/order-service
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=false
#spring.jpa.hibernate.ddl-auto=update

# Actuator
management.endpoints.web.exposure.include=health,info,metrics,kafka
management.endpoint.health.show-details=always
management.endpoint.health.roles=ACTUATOR_ADMIN
management.metrics.export.prometheus.enabled=true

# HTTP
server.compression.enabled=true
server.compression.mime-types=application/json,text/html,text/xml,text/plain

# Logging
logging.level.org.springframework.kafka=INFO
logging.level.org.hibernate.SQL=DEBUG